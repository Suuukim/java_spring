package com.koreait.idev.controller;


import java.io.File;
import java.io.IOException;
import java.util.UUID;
import java.util.logging.Logger;

import org.slf4j.spi.LoggerFactoryBinder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.multipart.MultipartFile;

import com.koreait.idev.model.Gallery;

@Controller
public class GalleryController {
	private static final Logger logger
	= LoggerFactoryBinder.getlogger(GalleryController.class);
	
	@GetMapping("gallery")
	public void view() {
		
	}
	
	@PostMapping("gallery")
	public void upload(Gallery vo) {
		
		//서버에서 전송받은 파일을 저장할 폴더를 정합니다. : c:\\upload
		String path = "c:\\upload";	// \ 는 출력 또는 문자열로 지정할떄는 두번씁니다.
		
		//서버에 전송된 내용 확인 테스트
		logger.info("title:" + vo.getTitle());
		for(MultipartFile f : vo.getPics()) {
			logger.info("파일명 : " + f.getOriginalFilename());	//전송받은 파일명
			logger.info("파일크기 : " + f.getSize());
			logger.info("랜덤문자열 : " + UUID.randomUUID().toString());
			//서버에 저장할 파일객체를 생성합니다. : 생성자 인자는 파일객체의 경로와 파일명
			File sfile = new File(path + "\\" + f.getOriginalFilename().substring(0,8));
			//f.getOriginalFilename() 는 여러 접속자(사용자)가 중복된 이름을 사용할 수 있어요.
			// -> 파일명은 서버에서 임의로 정해줄것입니다.
			try {
			// MultipartFile f 로 전송받은 파일을 참조하고 있으므로
			f.transferTo(sfile);
			}catch (IllegalStateException | IOException e) {
				logger.info("파일 전송오류 : " + e.getMessage());
			}
		}
	
	}
}
