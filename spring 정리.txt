스프링 모듈(라이브러리) 중 사용한 것은
: spring-core	-> 스프링 컨테이너
: spring-context	-> 스프링 컨테이너에 접근

스프링 Bean(빈) 이란
: 스프링 컨테이너가 생성하고 관리하는 객체

스프링 컨테이너란
: 스프링 bean의 생성과 소멸(life cycle)을 관리한다.
: 스프링 컨테이너로부터 필요한 bean 을 가져와 사용한다.

ClassPathXmlApplicationContext 클래스는
: ApplicationContext 인터페이스의 구현체
: ApplicationContext는 BeanFactory 인터페이스의 확장
: 스프링 컨테이너에서 bean을 생성하기 위해 xml 파일을 지정해야 합니다.

스프링 DI
: 클래스간의 의존관계를 bean 설정정보를 이용하여 자동으로 의존
관계를 주입. 스프링 컨테이너가 동작하여 실행함.
: 객체간의 의존관계는 (1)xml 설정파일 또는 (2)**어노테이션**을 이용
-------------------------어제 공부한 용어 정리------------------------------

1. 자바 인터페이스 복습

	실습 내용 : day2.review 패키지
	클래스 의존관계 : 사용자 요청(main메소드) => controller -> service -> dao

	* 클래스의 의존관계를 나타내는 클래스의 프로퍼티를 인터페이스 타입으로 한
	  것은 그 인터페이스의 구현체 클래스를 주입할 수 있다는 것입니다.
	* 개발과정에서 실행환경의 변화 또는 로직의 테스트 등을 위해서 주입되는
	  클래스를 변경해야 하는 상황이 발생할 수 있습니다.  기존 방식은 소스 코드
	  에서 주입되는 객체를 변경해야 합니다.
	  그래서 스프링은 소스코드에서가 아닌 스프링 관리하는 방식의 의존관계
	  주입을 합니다.

2. bean 설정으로 의존관계 주입 복습 : day2.review 패키지


3. 어노테이션 설정으로 의존관계 주입 실습 : day2.annot 패키지

///어노테이션///
정의 : 컴파일러 또는 실행시에 특정목적의 정보를 제공한다.
- 컴파일러에게 코드 작성 문법 에러를 체크하도록 정보를 제공 : @kspnjse 
- 소프트웨어 개발툴이 빌드시 배치시 코드를 자동으로 생성할 수 있도록 정보 제공 : 롬복 어노테이션 @setter
- 실행시(런타임시) 특정 기능을 실행하도록 정보를 제공 : @Component

///Annotiation 기반의 개발///
XML 파일에서 명시적으로 반을 설정하는 부분을 대신합니다.
XML 의 bean 정의 개념을 바탕으로 annotation을 이해합시다.

///JSP 250///
어노테이션 라이브러리의 규격 이름. 기본적으로 사용할 수 있는 규격.
@Component : Spring bean 정의 .역할에 따라 아내와 같은 다른 어노테이션을 사용하낟.
		@Controller : 컨트롤러
		@Service : 서비스
		@Repository : DAO
JSR 330 어노테이션은 같은 동작을 하는 것 이외에 더 많은 기능을 포함. 별도의 라이브러리 필요.
- 어노ㅔ이션으로 bean을 생성할 때 , 패키지 범위 설정필요. -> xml 파일에 1줄 작성.

//실습내용//
1. @Component로 빈생성 확인하기
	-> bean id는 자동으로 만들어집니다. 클래스 이름에 첫글자 소문자로 
	    바꾸어서 만들어집니다.
	-> bean id는 value 속성으로 지정할수도 있습니다.
2. @Autowired : 의존관계 자동 주입. 해당되는 타입의 객체가 1개일때만
	-> 커스텀생성자 의존관계 주입시 생략할 수 있음.
	-> 프로퍼티 변수 선언에서 사용할 때에는 기본생성자가 동작해야함.
	-> setter 메소드에서 사용할 때에는 기본생성자가 동작해야함.
3. @Qualifier : 자격자. @Autowired 함께 사용하며 해당되는 타입의 bean 이름을 직접 설정


--------------------------------------------------------------------------------------------------------
https://colinch4.github.io/2021-06-07/mybatis/ 참고사이트
1. Mapper 인터페이스란?
- Mybatis 매핑XML에 기재된 SQL을 호출하기 위한 인터페이스이다.
2. SqlSessionFactoryBean
- MyBatis 설정파일을 바탕으로 SqlSessionFactory 생성
- Spring Bean으로 등록해야함
3. SqlSessionFactoryBuilder
- MyBatis 설정파일을 바탕으로 SqlSessionFactory 생성
4. SqlSessionFactory 
- SqlSession 생성
5. SqlSession
- SQL 실행 및 트렌잭션 관리를 실행하는 핵심적인 클래스
- 여러 thread에서 공유할 경우 오류 발생(Thread_Safe하지않음) => thread마다 필요에 따라 생성
6. mapping 파일
- SQL문과 OR Mapping 설정

